# .zshrc is executed when the shell starts
zsh --version
echo "executing .zshrc"

# Alias commands
alias l='eza'             # eza is ls replacement
alias la='eza -a'         # hidden files
alias ll='eza -l'         # long listing
alias lo='eza -1'         # single column
alias lal='eza -la'       # long listing
alias g='zoxide'
alias mkdir='mkdir -pv'   #-p create intermediate dirs
alias v='nvim'
alias cp='cp -iv'         #-i prompt to overwrite
alias mv='mv -iv'         #-i prompt to overwrite
alias c='clear'
alias p='pwd'
alias path='echo $PATH | tr ":" "\n"'
alias tt='~/repos/dotfiles/tmux/tmux-sessionizer'
alias reload='source ~/.zshrc'        #reload bach profile in current session
alias gst='git status'

# Git display options
# this will display branches etc. inline rather than opening a new screen
export LESS=-FRX
# Update path
export PATH=~/bin:/opt/homebrew/opt/postgresql@16/bin:/opt/homebrew/sbin:/opt/homebrew/bin:~/go/bin:$PATH
# Git display options
# This will handle branch displays etc. inline rather than opening a file
export LESS=-FRX

# Load asdf
. /opt/homebrew/opt/asdf/libexec/asdf.sh
export ASDF_GOLANG_MOD_VERSION_ENABLED=true

# Autoload zsh's `add-zsh-hook` and `vcs_info` functions
# (-U autoload w/o substition, -z use zsh style)
autoload -Uz add-zsh-hook vcs_info

# Set prompt substitution so we can use the vcs_info_message variable
setopt prompt_subst

# Run the `vcs_info` hook to grab git info before displaying the prompt
add-zsh-hook precmd vcs_info

# Style the vcs_info message
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:git*' formats '%b%u%c'
# Format when the repo is in an action (merge, rebase, etc)
zstyle ':vcs_info:git*' actionformats '%F{14}⏱ %*%f'
zstyle ':vcs_info:git*' unstagedstr '*'
zstyle ':vcs_info:git*' stagedstr '+'
# This enables %u and %c (unstaged/staged changes) to work,
# but can be slow on large repos
zstyle ':vcs_info:*:*' check-for-changes true

# Prompt Stuff
# Set the prompt
# PS1='%# '
# PROMPT='%(?.%F{14}⏺.%F{9}⏺)%f %2~%F{8}(${vcs_info_msg_0_}) %f$ '
# Set the right prompt to the vcs_info message
# RPROMPT='%F{8}⎇ ${vcs_info_msg_0_}'
# RPROMPT='%F{8}${vcs_info_msg_0_}'
#
# https://github.com/spaceship-prompt/spaceship-prompt
# https://spaceship-prompt.sh/
# config in ~/.config/spaceship.zsh
source $(brew --prefix)/opt/spaceship/spaceship.zsh

# AUTOCOMPLETION
# Add all the extensions provided by Homebrew packages
# I export fpath so I have access to the fpath value later if investigation is 
# required.
export fpath=(/opt/homebrew/share/zsh/site-functions $fpath)
# Add extensions from the zsh-completions package
# https://github.com/zsh-users/zsh-completions
# this adds a ton of useful stuff, esp. Rails for me.
# export fpath=(~/repos/zsh-completions/src $fpath)
# This enables expansion in the middle of a line rather than only at the end.
# Useful when using the prefix of a previous command without deleting to the
# end of the line.
bindkey "TAB" expand-or-complete-prefix
# initialize autocompletion
autoload -U compinit && compinit

# history setup
HISTSIZE=5000
HISTFILE=$HOME/.zhistory
SAVEHIST=5000
HISTDUP=erase
setopt SHARE_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS


# autocompletion using arrow keys (based on history)
# bindkey '\e[A' history-search-backward
bindkey '\e[A' history-substring-search-up
# bindkey '\e[B' history-search-forward
bindkey '\e[B' history-substring-search-down

# brew install zsh-history-substring-search
# https://github.com/zsh-users/zsh-history-substring-search.git
source $(brew --prefix)/share/zsh-history-substring-search/zsh-history-substring-search.zsh

# brew install zsh-syntax-highlighting
# https://github.com/zsh-users/zsh-syntax-highlighting.git
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# brew install zsh-autosuggestions
# https://github.com/zsh-users/zsh-autosuggestions.git
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# Load settings specific to this setup (if required).
if [ -f ~/.zshrc.after ]; then . ~/.zshrc.after; fi
